{"version":3,"file":"static/js/9396.3e0970e2.chunk.js","mappings":"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","sources":["keycloak-theme/Template.tsx","keycloak-theme/KcApp.tsx","keycloak-theme/i18n.ts","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/lib/components/shared/Template.tsx\n\n// You can replace all relative imports by cherry picking files from the keycloakify module.  \n// For example, the following import:  \n// import { assert } from \"./tools/assert\";\n// becomes:  \nimport { assert } from \"keycloakify/lib/tools/assert\";\nimport { clsx } from \"keycloakify/lib/tools/clsx\";\nimport type { TemplateProps } from \"keycloakify/lib/KcProps\";\nimport { usePrepareTemplate } from \"keycloakify/lib/Template\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        formNode,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doFetchDefaultThemeResources,\n        stylesCommon,\n        styles,\n        scripts,\n        kcHtmlClass\n    } = props;\n\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n\n    const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\n\n    const { isReady } = usePrepareTemplate({\n        doFetchDefaultThemeResources,\n        stylesCommon,\n        styles,\n        scripts,\n        url,\n        kcHtmlClass\n    });\n\n    if (!isReady) {\n        return null;\n    }\n\n    return (\n        <div className={clsx(props.kcLoginClass)}>\n            <div id=\"kc-header\" className={clsx(props.kcHeaderClass)}>\n                <div id=\"kc-header-wrapper\" className={clsx(props.kcHeaderWrapperClass)}>\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                </div>\n            </div>\n\n            <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\n                <header className={clsx(props.kcFormHeaderClass)}>\n                    {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                        <div id=\"kc-locale\">\n                            <div id=\"kc-locale-wrapper\" className={clsx(props.kcLocaleWrapperClass)}>\n                                <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                    <a href=\"#\" id=\"kc-current-locale-link\">\n                                        {labelBySupportedLanguageTag[currentLanguageTag]}\n                                    </a>\n                                    <ul>\n                                        {locale.supported.map(({ languageTag }) => (\n                                            <li key={languageTag} className=\"kc-dropdown-item\">\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                <a href=\"#\" onClick={() => changeLocale(languageTag)}>\n                                                    {labelBySupportedLanguageTag[languageTag]}\n                                                </a>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n                        displayRequiredFields ? (\n                            <div className={clsx(props.kcContentWrapperClass)}>\n                                <div className={clsx(props.kcLabelWrapperClass, \"subtitle\")}>\n                                    <span className=\"subtitle\">\n                                        <span className=\"required\">*</span>\n                                        {msg(\"requiredFields\")}\n                                    </span>\n                                </div>\n                                <div className=\"col-md-10\">\n                                    <h1 id=\"kc-page-title\">{headerNode}</h1>\n                                </div>\n                            </div>\n                        ) : (\n                            <h1 id=\"kc-page-title\">{headerNode}</h1>\n                        )\n                    ) : displayRequiredFields ? (\n                        <div className={clsx(props.kcContentWrapperClass)}>\n                            <div className={clsx(props.kcLabelWrapperClass, \"subtitle\")}>\n                                <span className=\"subtitle\">\n                                    <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                                </span>\n                            </div>\n                            <div className=\"col-md-10\">\n                                {showUsernameNode}\n                                <div className={clsx(props.kcFormGroupClass)}>\n                                    <div id=\"kc-username\">\n                                        <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                        <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                            <div className=\"kc-login-tooltip\">\n                                                <i className={clsx(props.kcResetFlowIcon)}></i>\n                                                <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                            </div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <>\n                            {showUsernameNode}\n                            <div className={clsx(props.kcFormGroupClass)}>\n                                <div id=\"kc-username\">\n                                    <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                        <div className=\"kc-login-tooltip\">\n                                            <i className={clsx(props.kcResetFlowIcon)}></i>\n                                            <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                        </div>\n                                    </a>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </header>\n                <div id=\"kc-content\">\n                    <div id=\"kc-content-wrapper\">\n                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                        {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                            <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                {message.type === \"success\" && <span className={clsx(props.kcFeedbackSuccessIcon)}></span>}\n                                {message.type === \"warning\" && <span className={clsx(props.kcFeedbackWarningIcon)}></span>}\n                                {message.type === \"error\" && <span className={clsx(props.kcFeedbackErrorIcon)}></span>}\n                                {message.type === \"info\" && <span className={clsx(props.kcFeedbackInfoIcon)}></span>}\n                                <span\n                                    className=\"kc-feedback-text\"\n                                    dangerouslySetInnerHTML={{\n                                        \"__html\": message.summary\n                                    }}\n                                />\n                            </div>\n                        )}\n                        {formNode}\n                        {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                            <form\n                                id=\"kc-select-try-another-way-form\"\n                                action={url.loginAction}\n                                method=\"post\"\n                                className={clsx(displayWide && props.kcContentWrapperClass)}\n                            >\n                                <div className={clsx(displayWide && [props.kcFormSocialAccountContentClass, props.kcFormSocialAccountClass])}>\n                                    <div className={clsx(props.kcFormGroupClass)}>\n                                        <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\n                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                        <a href=\"#\" id=\"try-another-way\" onClick={() => {\n                                            document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                            return false;\n                                        }}>\n                                            {msg(\"doTryAnotherWay\")}\n                                        </a>\n                                    </div>\n                                </div>\n                            </form>\n                        )}\n                        {displayInfo && (\n                            <div id=\"kc-info\" className={clsx(props.kcSignUpClass)}>\n                                <div id=\"kc-info-wrapper\" className={clsx(props.kcInfoAreaWrapperClass)}>\n                                    {infoNode}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import \"./KcApp.css\";\nimport { lazy, Suspense } from \"react\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Fallback, { defaultKcProps, type KcProps, type PageProps } from \"keycloakify\";\nimport Template from \"./Template\";\nimport DefaultTemplate from \"keycloakify/lib/Template\";\n\n// You can uncomment this to see the values passed by the main app before redirecting.  \n//import { foo, bar } from \"./valuesTransferredOverUrl\";\n//console.log(`Values passed by the main app in the URL parameter:`, { foo, bar });\n\nconst Login = lazy(()=> import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(()=> import(\"keycloakify/lib/pages/Info\"));\n\n// This is like editing the theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst kcProps: KcProps = {\n    ...defaultKcProps,\n    // NOTE: The classes are defined in ./KcApp.css\n    // You can add your classes alongside thoses that are present in the default Keycloak theme...\n    \"kcHtmlClass\": [...defaultKcProps.kcHtmlClass, \"my-root-class\"],\n    // ...or overwrite  \n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function App(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Locales not yet downloaded, we could as well display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n    \n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    const pageProps: Omit<PageProps<any, typeof i18n>, \"kcContext\"> = {\n        i18n,\n        // Here we have overloaded the default template, however you could use the default one with:  \n        //Template: DefaultTemplate,\n        Template,\n        // Wether or not we should download the CSS and JS resources that comes with the default Keycloak theme.  \n        doFetchDefaultThemeResources: true,\n        ...kcProps,\n    };\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, ...pageProps }} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, ...pageProps }} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, ...pageProps }} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, ...pageProps }} />;\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, ...pageProps }} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, ...pageProps }} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    case \"info.ftl\": return <Info {...{ kcContext, ...pageProps}} Template={DefaultTemplate} doFetchDefaultThemeResources={true} />;\n                    default: return <Fallback {...{ kcContext, ...pageProps }} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n","import { useI18n as useI18nBase } from \"keycloakify\";\n\ntype Props = Omit<Parameters<typeof useI18nBase>[0], \"extraMessages\">;\n\nexport function useI18n(props: Props) {\n    const { kcContext } = props;\n    return useI18nBase({\n        kcContext,\n        // NOTE: Here you can override the default i18n messages\n        // or define new ones that, for example, you would have\n        // defined in the Keycloak admin UI for UserProfile\n        // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n        \"extraMessages\": {\n            \"en\": {\n                \"alphanumericalCharsOnly\": \"Only alphanumerical characters\",\n                \"gender\": \"Gender\",\n                // Here we overwrite the default english value for the message \"doForgotPassword\" \n                // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n                \"doForgotPassword\": \"I forgot my password\",\n            },\n            \"fr\": {\n                /* spell-checker: disable */\n                \"alphanumericalCharsOnly\": \"Caractère alphanumérique uniquement\",\n                \"gender\": \"Genre\",\n                \"doForgotPassword\": \"J'ai oublié mon mot de passe\"\n                /* spell-checker: enable */\n            },\n        },\n    });\n}\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Template","props","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","formNode","infoNode","kcContext","i18n","doFetchDefaultThemeResources","stylesCommon","styles","scripts","kcHtmlClass","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","usePrepareTemplate","isReady","className","clsx","kcLoginClass","id","kcHeaderClass","kcHeaderWrapperClass","displayNameHtml","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","undefined","supported","length","kcLocaleWrapperClass","href","map","languageTag","onClick","showUsername","showResetCredentials","kcContentWrapperClass","kcLabelWrapperClass","kcFormGroupClass","attemptedUsername","loginRestartFlowUrl","kcResetFlowIcon","type","kcFeedbackSuccessIcon","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","summary","showTryAnotherWayLink","action","loginAction","method","kcFormSocialAccountContentClass","kcFormSocialAccountClass","name","value","document","forms","submit","kcSignUpClass","kcInfoAreaWrapperClass","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","kcProps","defaultKcProps","App","useI18nBase","useI18n","pageProps","Suspense","pageId","DefaultTemplate","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}